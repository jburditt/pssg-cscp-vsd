#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Database.Model
{
	
	
	/// <summary>
	/// Status of the Entitlement
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum Vsd_Entitlement_StateCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Active", 0)]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Inactive", 1)]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the Entitlement
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum Vsd_Entitlement_StatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Approved", 2, "#0000ff")]
		Approved = 100000000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Created in Error", 7, "#0000ff")]
		CreatedInError = 100000003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Denied", 6, "#0000ff")]
		Denied = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Paid", 5, "#0000ff")]
		Paid = 100000004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Pending", 1, "#0000ff")]
		Pending = 100000001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Requested", 0, "#0000ff")]
		Requested = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Suspended", 3, "#0000ff")]
		Suspended = 100000005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Terminated", 8, "#0000ff")]
		Terminated = 100000006,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Withdrawn", 4, "#0000ff")]
		Withdrawn = 100000002,
	}
	
	/// <summary>
	/// To identify if the benefit has been requested by an applicant or if the benefit has been added by the claims coordinator.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum Vsd_Entitlement_Vsd_Cvap_BenefitSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Applicant Requested", 0, "#0000ff")]
		ApplicantRequested = 100000000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Staff Added", 1, "#0000ff")]
		StaffAdded = 100000001,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum Vsd_Entitlement_Vsd_EntitlementStage
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Ready for CC", 0, "#0000ff")]
		ReadyForCc = 100000000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Ready for TL", 1, "#0000ff")]
		ReadyForTl = 100000001,
	}
	
	/// <summary>
	/// Select the payment schedule status
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum Vsd_Entitlement_Vsd_PaymentScheduleStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Active", 0, "#0000ff")]
		Active = 100000000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Cancelled", 3, "#0000ff")]
		Cancelled = 100000002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Modified", 2, "#0000ff")]
		Modified = 100000003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Pause", 1, "#0000ff")]
		Pause = 100000001,
	}
	
	/// <summary>
	/// Select the status for the entitlement.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum Vsd_Entitlement_Vsd_Status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Approved", 0, "#0000ff")]
		Approved = 100000001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Created in Error", 1, "#0000ff")]
		CreatedInError = 100000005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Denied", 2, "#0000ff")]
		Denied = 100000003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Paid", 3, "#0000ff")]
		Paid = 100000006,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Pending", 4, "#0000ff")]
		Pending = 100000002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Requested", 5, "#0000ff")]
		Requested = 100000000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Suspended", 6, "#0000ff")]
		Suspended = 100000007,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Terminated", 7, "#0000ff")]
		Terminated = 100000008,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		[OptionSetMetadataAttribute("Withdrawn", 8, "#0000ff")]
		Withdrawn = 100000004,
	}
	
	/// <summary>
	/// Entitlements managed on a case for a CVAP and VSU program units.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("vsd_entitlement")]
	public partial class Vsd_Entitlement : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the vsd_entitlement entity
		/// </summary>
		public partial class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangerAte = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string Lk_Vsd_Entitlement_CreatedBy = "lk_vsd_entitlement_createdby";
			public const string Lk_Vsd_Entitlement_CreatedOnBehalfBy = "lk_vsd_entitlement_createdonbehalfby";
			public const string Lk_Vsd_Entitlement_ModifiedBy = "lk_vsd_entitlement_modifiedby";
			public const string Lk_Vsd_Entitlement_ModifiedOnBehalfBy = "lk_vsd_entitlement_modifiedonbehalfby";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ProcessId = "processid";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StateCodename = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodename = "statuscodename";
			public const string Team_Vsd_Entitlement = "team_vsd_entitlement";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrency_Vsd_Entitlement = "TransactionCurrency_vsd_entitlement";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string TraversedPath = "traversedpath";
			public const string User_Vsd_Entitlement = "user_vsd_entitlement";
			public const string UtcConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string Vsd_AccumulatedAmount = "vsd_accumulatedamount";
			public const string Vsd_AccumulatedAmount_Base = "vsd_accumulatedamount_base";
			public const string Vsd_ApplicantType = "vsd_applicanttype";
			public const string Vsd_ApplicantTypeName = "vsd_applicanttypename";
			public const string Vsd_BenefitCategoryId = "vsd_benefitcategoryid";
			public const string Vsd_BenefitCategoryIdName = "vsd_benefitcategoryidname";
			public const string Vsd_BenefitSubtypeId = "vsd_benefitsubtypeid";
			public const string Vsd_BenefitSubtypeIdName = "vsd_benefitsubtypeidname";
			public const string Vsd_BenefitTypeId = "vsd_benefittypeid";
			public const string Vsd_BenefitTypeIdName = "vsd_benefittypeidname";
			public const string Vsd_CaseId = "vsd_caseid";
			public const string Vsd_CaseiDnaMe = "vsd_caseidname";
			public const string Vsd_Contact_Vsd_Entitlement = "vsd_contact_vsd_entitlement";
			public const string Vsd_ContactId = "vsd_contactid";
			public const string Vsd_ContactIdName = "vsd_contactidname";
			public const string Vsd_ContactIdYomiName = "vsd_contactidyominame";
			public const string Vsd_Cvap_ApprovedSessionAmount = "vsd_cvap_approvedsessionamount";
			public const string Vsd_Cvap_Available_Entitlement = "vsd_cvap_available_entitlement";
			public const string Vsd_Cvap_BenefitSource = "vsd_cvap_benefitsource";
			public const string Vsd_Cvap_BenefitSourceName = "vsd_cvap_benefitsourcename";
			public const string Vsd_Cvap_MissedSessionInvoices = "vsd_cvap_missedsessioninvoices";
			public const string Vsd_Cvap_MissedSessionInvoicesName = "vsd_cvap_missedsessioninvoicesname";
			public const string Vsd_Cvap_RequestedSessionAmount = "vsd_cvap_requestedsessionamount";
			public const string Vsd_Description = "vsd_description";
			public const string Vsd_EffectiveDate = "vsd_effectivedate";
			public const string Vsd_Elvis_Pin = "vsd_elvis_pin";
			public const string Vsd_EndDate = "vsd_enddate";
			public const string Vsd_Entitlement_Vsd_InvoiceLineDetail = "Vsd_Entitlement_Vsd_InvoiceLineDetail";
			public const string Vsd_EntitlementId = "vsd_entitlementid";
			public const string Id = "vsd_entitlementid";
			public const string Vsd_EntitlementStage = "vsd_entitlementstage";
			public const string Vsd_EntitlementStageName = "vsd_entitlementstagename";
			public const string Vsd_FinanciallyDependentIfMWage = "vsd_financiallydependentifmwage";
			public const string Vsd_InvoiceType = "vsd_invoicetype";
			public const string Vsd_InvoiceTypeName = "vsd_invoicetypename";
			public const string Vsd_IsRecurring = "vsd_isrecurring";
			public const string Vsd_IsRecurringName = "vsd_isrecurringname";
			public const string Vsd_LongTermLiability = "vsd_longtermliability";
			public const string Vsd_LongTermLiabilityName = "vsd_longtermliabilityname";
			public const string Vsd_Name = "vsd_name";
			public const string Vsd_NoOfMissedSessions = "vsd_noofmissedsessions";
			public const string Vsd_NoOfMissedSessions_Date = "vsd_noofmissedsessions_date";
			public const string Vsd_NoOfMissedSessions_State = "vsd_noofmissedsessions_state";
			public const string Vsd_Other = "vsd_other";
			public const string Vsd_PaymentScheduleStatus = "vsd_paymentschedulestatus";
			public const string Vsd_PaymentScheduleStatusName = "vsd_paymentschedulestatusname";
			public const string Vsd_SetCap = "vsd_setcap";
			public const string Vsd_StartDate = "vsd_startdate";
			public const string Vsd_Status = "vsd_status";
			public const string Vsd_StatusName = "vsd_statusname";
			public const string Vsd_TaxExemptFlag = "vsd_taxexemptflag";
			public const string Vsd_TaxExemptFlagName = "vsd_taxexemptflagname";
			public const string Vsd_TotalAmountPaid = "vsd_totalamountpaid";
			public const string Vsd_TotalAmountPaid_Base = "vsd_totalamountpaid_base";
			public const string Vsd_TotalAmountPaid_Date = "vsd_totalamountpaid_date";
			public const string Vsd_TotalAmountPaid_State = "vsd_totalamountpaid_state";
			public const string Vsd_TotalHoursUsed = "vsd_totalhoursused";
			public const string Vsd_TotalHoursUsed_Date = "vsd_totalhoursused_date";
			public const string Vsd_TotalHoursUsed_State = "vsd_totalhoursused_state";
			public const string Vsd_Vsd_Entitlement_Vsd_Invoice = "Vsd_Vsd_Entitlement_Vsd_Invoice";
			public const string Vsd_Vsd_Entitlement_Vsd_Payment = "Vsd_Vsd_Entitlement_Vsd_Payment";
			public const string Vsd_Vsd_Entitlement_Vsd_PaymentSchedule = "Vsd_Vsd_Entitlement_Vsd_PaymentSchedule";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Vsd_Entitlement(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Vsd_Entitlement(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Vsd_Entitlement(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Vsd_Entitlement() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "vsd_entitlementid";
		
		public const string PrimaryNameAttribute = "vsd_name";
		
		public const string EntitySchemaName = "vsd_entitlement";
		
		public const string EntityLogicalName = "vsd_entitlement";
		
		public const string EntityLogicalCollectionName = "vsd_entitlements";
		
		public const string EntitySetName = "vsd_entitlements";
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the entity with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangerAte
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Contains the id of the process associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("processid", value);
			}
		}
		
		/// <summary>
		/// Contains the id of the stage where the entity is located.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("stageid", value);
			}
		}
		
		/// <summary>
		/// Status of the Entitlement
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual Vsd_Entitlement_StateCode? StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Vsd_Entitlement_StateCode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the Entitlement
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual Vsd_Entitlement_StatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Vsd_Entitlement_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("traversedpath", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UtcConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_accumulatedamount")]
		public Microsoft.Xrm.Sdk.Money Vsd_AccumulatedAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("vsd_accumulatedamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_accumulatedamount", value);
			}
		}
		
		/// <summary>
		/// Value of the Accumulated Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_accumulatedamount_base")]
		public Microsoft.Xrm.Sdk.Money Vsd_AccumulatedAmount_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("vsd_accumulatedamount_base");
			}
		}
		
		/// <summary>
		/// Select the type of the Applicant based on the application.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_applicanttype")]
		public virtual Vsd_ApplicantType? Vsd_ApplicantType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Vsd_ApplicantType?)(EntityOptionSetEnum.GetEnum(this, "vsd_applicanttype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_applicanttype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_applicanttypename")]
		public string Vsd_ApplicantTypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("vsd_applicanttype"))
				{
					return this.FormattedValues["vsd_applicanttype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the benefit category for this entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_benefitcategoryid")]
		public Microsoft.Xrm.Sdk.EntityReference Vsd_BenefitCategoryId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("vsd_benefitcategoryid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_benefitcategoryid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_benefitcategoryidname")]
		public string Vsd_BenefitCategoryIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("vsd_benefitcategoryid"))
				{
					return this.FormattedValues["vsd_benefitcategoryid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the benefit sub-type for this entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_benefitsubtypeid")]
		public Microsoft.Xrm.Sdk.EntityReference Vsd_BenefitSubtypeId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("vsd_benefitsubtypeid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_benefitsubtypeid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_benefitsubtypeidname")]
		public string Vsd_BenefitSubtypeIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("vsd_benefitsubtypeid"))
				{
					return this.FormattedValues["vsd_benefitsubtypeid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the Benefit Type for this entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_benefittypeid")]
		public Microsoft.Xrm.Sdk.EntityReference Vsd_BenefitTypeId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("vsd_benefittypeid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_benefittypeid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_benefittypeidname")]
		public string Vsd_BenefitTypeIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("vsd_benefittypeid"))
				{
					return this.FormattedValues["vsd_benefittypeid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the case to which the entitlement belongs to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_caseid")]
		public Microsoft.Xrm.Sdk.EntityReference Vsd_CaseId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("vsd_caseid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_caseid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_caseidname")]
		public string Vsd_CaseiDnaMe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("vsd_caseid"))
				{
					return this.FormattedValues["vsd_caseid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the contact to which the entitlement belongs to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_contactid")]
		public Microsoft.Xrm.Sdk.EntityReference Vsd_ContactId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("vsd_contactid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_contactid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_contactidname")]
		public string Vsd_ContactIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("vsd_contactid"))
				{
					return this.FormattedValues["vsd_contactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_contactidyominame")]
		public string Vsd_ContactIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("vsd_contactid"))
				{
					return this.FormattedValues["vsd_contactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_cvap_approvedsessionamount")]
		public System.Nullable<int> Vsd_Cvap_ApprovedSessionAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("vsd_cvap_approvedsessionamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_cvap_approvedsessionamount", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_cvap_available_entitlement")]
		public System.Nullable<decimal> Vsd_Cvap_Available_Entitlement
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("vsd_cvap_available_entitlement");
			}
		}
		
		/// <summary>
		/// To identify if the benefit has been requested by an applicant or if the benefit has been added by the claims coordinator.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_cvap_benefitsource")]
		public virtual Vsd_Entitlement_Vsd_Cvap_BenefitSource? Vsd_Cvap_BenefitSource
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Vsd_Entitlement_Vsd_Cvap_BenefitSource?)(EntityOptionSetEnum.GetEnum(this, "vsd_cvap_benefitsource")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_cvap_benefitsource", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_cvap_benefitsourcename")]
		public string Vsd_Cvap_BenefitSourceName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("vsd_cvap_benefitsource"))
				{
					return this.FormattedValues["vsd_cvap_benefitsource"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_cvap_missedsessioninvoices")]
		public System.Nullable<bool> Vsd_Cvap_MissedSessionInvoices
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("vsd_cvap_missedsessioninvoices");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_cvap_missedsessioninvoices", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_cvap_missedsessioninvoicesname")]
		public string Vsd_Cvap_MissedSessionInvoicesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("vsd_cvap_missedsessioninvoices"))
				{
					return this.FormattedValues["vsd_cvap_missedsessioninvoices"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_cvap_requestedsessionamount")]
		public System.Nullable<int> Vsd_Cvap_RequestedSessionAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("vsd_cvap_requestedsessionamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_cvap_requestedsessionamount", value);
			}
		}
		
		/// <summary>
		/// The description of the benefit applied to the case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_description")]
		public string Vsd_Description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("vsd_description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_description", value);
			}
		}
		
		/// <summary>
		/// The effective date for COLA payments.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_effectivedate")]
		public System.Nullable<System.DateTime> Vsd_EffectiveDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("vsd_effectivedate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_effectivedate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_elvis_pin")]
		public System.Nullable<int> Vsd_Elvis_Pin
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("vsd_elvis_pin");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_elvis_pin", value);
			}
		}
		
		/// <summary>
		/// The end date of the entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_enddate")]
		public System.Nullable<System.DateTime> Vsd_EndDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("vsd_enddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_enddate", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_entitlementid")]
		public System.Nullable<System.Guid> Vsd_EntitlementId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("vsd_entitlementid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_entitlementid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_entitlementid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.Vsd_EntitlementId = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_entitlementstage")]
		public virtual Vsd_Entitlement_Vsd_EntitlementStage? Vsd_EntitlementStage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Vsd_Entitlement_Vsd_EntitlementStage?)(EntityOptionSetEnum.GetEnum(this, "vsd_entitlementstage")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_entitlementstage", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_entitlementstagename")]
		public string Vsd_EntitlementStageName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("vsd_entitlementstage"))
				{
					return this.FormattedValues["vsd_entitlementstage"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_financiallydependentifmwage")]
		public System.Nullable<decimal> Vsd_FinanciallyDependentIfMWage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("vsd_financiallydependentifmwage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_financiallydependentifmwage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_invoicetype")]
		public virtual Vsd_InvoiceTypes? Vsd_InvoiceType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Vsd_InvoiceTypes?)(EntityOptionSetEnum.GetEnum(this, "vsd_invoicetype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_invoicetype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_invoicetypename")]
		public string Vsd_InvoiceTypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("vsd_invoicetype"))
				{
					return this.FormattedValues["vsd_invoicetype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select if the entitlement is recurring.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_isrecurring")]
		public System.Nullable<bool> Vsd_IsRecurring
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("vsd_isrecurring");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_isrecurring", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_isrecurringname")]
		public string Vsd_IsRecurringName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("vsd_isrecurring"))
				{
					return this.FormattedValues["vsd_isrecurring"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Long term liability indicator being set by the status of the pension file.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_longtermliability")]
		public System.Nullable<bool> Vsd_LongTermLiability
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("vsd_longtermliability");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_longtermliability", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_longtermliabilityname")]
		public string Vsd_LongTermLiabilityName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("vsd_longtermliability"))
				{
					return this.FormattedValues["vsd_longtermliability"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The auto generated name of the entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_name")]
		public string Vsd_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("vsd_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_name", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_noofmissedsessions")]
		public System.Nullable<int> Vsd_NoOfMissedSessions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("vsd_noofmissedsessions");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field No Of Missed Sessions.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_noofmissedsessions_date")]
		public System.Nullable<System.DateTime> Vsd_NoOfMissedSessions_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("vsd_noofmissedsessions_date");
			}
		}
		
		/// <summary>
		/// State of rollup field No Of Missed Sessions.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_noofmissedsessions_state")]
		public System.Nullable<int> Vsd_NoOfMissedSessions_State
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("vsd_noofmissedsessions_state");
			}
		}
		
		/// <summary>
		/// Provide the other type of benefit type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_other")]
		public string Vsd_Other
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("vsd_other");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_other", value);
			}
		}
		
		/// <summary>
		/// Select the payment schedule status
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_paymentschedulestatus")]
		public virtual Vsd_Entitlement_Vsd_PaymentScheduleStatus? Vsd_PaymentScheduleStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Vsd_Entitlement_Vsd_PaymentScheduleStatus?)(EntityOptionSetEnum.GetEnum(this, "vsd_paymentschedulestatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_paymentschedulestatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_paymentschedulestatusname")]
		public string Vsd_PaymentScheduleStatusName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("vsd_paymentschedulestatus"))
				{
					return this.FormattedValues["vsd_paymentschedulestatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The amount of money that the Adjudicator will cap the benefit at.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_setcap")]
		public System.Nullable<decimal> Vsd_SetCap
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("vsd_setcap");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_setcap", value);
			}
		}
		
		/// <summary>
		/// The start date of the entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_startdate")]
		public System.Nullable<System.DateTime> Vsd_StartDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("vsd_startdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_startdate", value);
			}
		}
		
		/// <summary>
		/// Select the status for the entitlement.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_status")]
		public virtual Vsd_Entitlement_Vsd_Status? Vsd_Status
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Vsd_Entitlement_Vsd_Status?)(EntityOptionSetEnum.GetEnum(this, "vsd_status")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_status", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_statusname")]
		public string Vsd_StatusName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("vsd_status"))
				{
					return this.FormattedValues["vsd_status"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_taxexemptflag")]
		public System.Nullable<bool> Vsd_TaxExemptFlag
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("vsd_taxexemptflag");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("vsd_taxexemptflag", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_taxexemptflagname")]
		public string Vsd_TaxExemptFlagName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("vsd_taxexemptflag"))
				{
					return this.FormattedValues["vsd_taxexemptflag"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The dollar amount for all payment records processed by the CAS accounting system.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_totalamountpaid")]
		public Microsoft.Xrm.Sdk.Money Vsd_TotalAmountPaid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("vsd_totalamountpaid");
			}
		}
		
		/// <summary>
		/// Value of the Total Amount Paid in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_totalamountpaid_base")]
		public Microsoft.Xrm.Sdk.Money Vsd_TotalAmountPaid_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("vsd_totalamountpaid_base");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Total Amount Paid.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_totalamountpaid_date")]
		public System.Nullable<System.DateTime> Vsd_TotalAmountPaid_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("vsd_totalamountpaid_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Total Amount Paid.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_totalamountpaid_state")]
		public System.Nullable<int> Vsd_TotalAmountPaid_State
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("vsd_totalamountpaid_state");
			}
		}
		
		/// <summary>
		/// The total amount of hours used by the client.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_totalhoursused")]
		public System.Nullable<decimal> Vsd_TotalHoursUsed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("vsd_totalhoursused");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Total Hours Used.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_totalhoursused_date")]
		public System.Nullable<System.DateTime> Vsd_TotalHoursUsed_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("vsd_totalhoursused_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Total Hours Used.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_totalhoursused_state")]
		public System.Nullable<int> Vsd_TotalHoursUsed_State
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("vsd_totalhoursused_state");
			}
		}
		
		/// <summary>
		/// 1:N vsd_entitlement_vsd_invoicelinedetail
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("vsd_entitlement_vsd_invoicelinedetail")]
		public System.Collections.Generic.IEnumerable<Database.Model.Vsd_InvoiceLineDetail> Vsd_Entitlement_Vsd_InvoiceLineDetail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Database.Model.Vsd_InvoiceLineDetail>("vsd_entitlement_vsd_invoicelinedetail", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Database.Model.Vsd_InvoiceLineDetail>("vsd_entitlement_vsd_invoicelinedetail", null, value);
			}
		}
		
		/// <summary>
		/// 1:N vsd_vsd_entitlement_vsd_invoice
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("vsd_vsd_entitlement_vsd_invoice")]
		public System.Collections.Generic.IEnumerable<Database.Model.Vsd_Invoice> Vsd_Vsd_Entitlement_Vsd_Invoice
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Database.Model.Vsd_Invoice>("vsd_vsd_entitlement_vsd_invoice", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Database.Model.Vsd_Invoice>("vsd_vsd_entitlement_vsd_invoice", null, value);
			}
		}
		
		/// <summary>
		/// 1:N vsd_vsd_entitlement_vsd_payment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("vsd_vsd_entitlement_vsd_payment")]
		public System.Collections.Generic.IEnumerable<Database.Model.Vsd_Payment> Vsd_Vsd_Entitlement_Vsd_Payment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Database.Model.Vsd_Payment>("vsd_vsd_entitlement_vsd_payment", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Database.Model.Vsd_Payment>("vsd_vsd_entitlement_vsd_payment", null, value);
			}
		}
		
		/// <summary>
		/// 1:N vsd_vsd_entitlement_vsd_paymentschedule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("vsd_vsd_entitlement_vsd_paymentschedule")]
		public System.Collections.Generic.IEnumerable<Database.Model.Vsd_PaymentSchedule> Vsd_Vsd_Entitlement_Vsd_PaymentSchedule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Database.Model.Vsd_PaymentSchedule>("vsd_vsd_entitlement_vsd_paymentschedule", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<Database.Model.Vsd_PaymentSchedule>("vsd_vsd_entitlement_vsd_paymentschedule", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_vsd_entitlement_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_vsd_entitlement_createdby")]
		public Database.Model.SystemUser Lk_Vsd_Entitlement_CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.SystemUser>("lk_vsd_entitlement_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_vsd_entitlement_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_vsd_entitlement_createdonbehalfby")]
		public Database.Model.SystemUser Lk_Vsd_Entitlement_CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.SystemUser>("lk_vsd_entitlement_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Database.Model.SystemUser>("lk_vsd_entitlement_createdonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_vsd_entitlement_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_vsd_entitlement_modifiedby")]
		public Database.Model.SystemUser Lk_Vsd_Entitlement_ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.SystemUser>("lk_vsd_entitlement_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_vsd_entitlement_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_vsd_entitlement_modifiedonbehalfby")]
		public Database.Model.SystemUser Lk_Vsd_Entitlement_ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.SystemUser>("lk_vsd_entitlement_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Database.Model.SystemUser>("lk_vsd_entitlement_modifiedonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_vsd_entitlement
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_vsd_entitlement")]
		public Database.Model.Team Team_Vsd_Entitlement
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.Team>("team_vsd_entitlement", null);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_vsd_entitlement
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_vsd_entitlement")]
		public Database.Model.TransactionCurrency TransactionCurrency_Vsd_Entitlement
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.TransactionCurrency>("TransactionCurrency_vsd_entitlement", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Database.Model.TransactionCurrency>("TransactionCurrency_vsd_entitlement", null, value);
			}
		}
		
		/// <summary>
		/// N:1 user_vsd_entitlement
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_vsd_entitlement")]
		public Database.Model.SystemUser User_Vsd_Entitlement
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.SystemUser>("user_vsd_entitlement", null);
			}
		}
		
		/// <summary>
		/// N:1 vsd_contact_vsd_entitlement
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("vsd_contactid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("vsd_contact_vsd_entitlement")]
		public Database.Model.Contact Vsd_Contact_Vsd_Entitlement
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Database.Model.Contact>("vsd_contact_vsd_entitlement", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<Database.Model.Contact>("vsd_contact_vsd_entitlement", null, value);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Vsd_Entitlement(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (value != null && name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["vsd_entitlementid"] = base.Id;
                        break;
                    case "vsd_entitlementid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
