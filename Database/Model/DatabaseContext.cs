#pragma warning disable CS1591
// Created via this command line: PAC modelbuilder build --outdirectory C:\Users\jebbb\source\repos\pssg-cscp-vsd\Database\Model --settingsTemplateFile C:\Users\jebbb\source\repos\pssg-cscp-vsd\Database\Model\builderSettings.json
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: Microsoft.Xrm.Sdk.Client.ProxyTypesAssemblyAttribute()]

namespace Database.Model
{
	
	
	/// <summary>
	/// Represents a source of entities bound to a Dataverse service. It tracks and manages changes made to the retrieved entities.
	/// </summary>
	public partial class DatabaseContext : Microsoft.Xrm.Sdk.Client.OrganizationServiceContext
	{
		
		/// <summary>
		/// Constructor.
		/// </summary>
		public DatabaseContext(Microsoft.Xrm.Sdk.IOrganizationService service) : 
				base(service)
		{
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Account"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Account> AccountSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Account>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Contact"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Contact> ContactSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Contact>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.SystemUser"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.SystemUser> SystemUserSet
		{
			get
			{
				return this.CreateQuery<Database.Model.SystemUser>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Task"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Task> TaskSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Task>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Team"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Team> TeamSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Team>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.TransactionCurrency"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.TransactionCurrency> TransactionCurrencySet
		{
			get
			{
				return this.CreateQuery<Database.Model.TransactionCurrency>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Vsd_CasPaymentType"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Vsd_CasPaymentType> Vsd_CasPaymentTypeSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Vsd_CasPaymentType>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Vsd_Config"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Vsd_Config> Vsd_ConfigSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Vsd_Config>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Vsd_Contract"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Vsd_Contract> Vsd_ContractSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Vsd_Contract>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Vsd_Country"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Vsd_Country> Vsd_CountrySet
		{
			get
			{
				return this.CreateQuery<Database.Model.Vsd_Country>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Vsd_CvapStOB"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Vsd_CvapStOB> Vsd_CvapStOBSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Vsd_CvapStOB>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Vsd_Entitlement"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Vsd_Entitlement> Vsd_EntitlementSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Vsd_Entitlement>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Vsd_IncomeSupportParameter"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Vsd_IncomeSupportParameter> Vsd_IncomeSupportParameterSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Vsd_IncomeSupportParameter>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Vsd_Invoice"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Vsd_Invoice> Vsd_InvoiceSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Vsd_Invoice>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Vsd_InvoiceLineDetail"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Vsd_InvoiceLineDetail> Vsd_InvoiceLineDetailSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Vsd_InvoiceLineDetail>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Vsd_Payment"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Vsd_Payment> Vsd_PaymentSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Vsd_Payment>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Vsd_PaymentSchedule"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Vsd_PaymentSchedule> Vsd_PaymentScheduleSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Vsd_PaymentSchedule>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Vsd_Program"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Vsd_Program> Vsd_ProgramSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Vsd_Program>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Vsd_ProgramType"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Vsd_ProgramType> Vsd_ProgramTypeSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Vsd_ProgramType>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Vsd_Province"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Vsd_Province> Vsd_ProvinceSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Vsd_Province>();
			}
		}
		
		/// <summary>
		/// Gets a binding to the set of all <see cref="Database.Model.Vsd_ScheduleG"/> entities.
		/// </summary>
		public System.Linq.IQueryable<Database.Model.Vsd_ScheduleG> Vsd_ScheduleGSet
		{
			get
			{
				return this.CreateQuery<Database.Model.Vsd_ScheduleG>();
			}
		}
	}
	
	/// <summary>
	/// Attribute to handle storing the OptionSet's Metadata.
	/// </summary>
	[System.AttributeUsageAttribute(System.AttributeTargets.Field)]
	public sealed class OptionSetMetadataAttribute : System.Attribute
	{
		
		private object[] _nameObjects;
		
		private System.Collections.Generic.Dictionary<int, string> _names;
		
		/// <summary>
		/// Color of the OptionSetValue.
		/// </summary>
		public string Color { get; set; }
		
		/// <summary>
		/// Description of the OptionSetValue.
		/// </summary>
		public string Description { get; set; }
		
		/// <summary>
		/// Display order index of the OptionSetValue.
		/// </summary>
		public int DisplayIndex { get; set; }
		
		/// <summary>
		/// External value of the OptionSetValue.
		/// </summary>
		public string ExternalValue { get; set; }
		
		/// <summary>
		/// Name of the OptionSetValue.
		/// </summary>
		public string Name { get; set; }
		
		/// <summary>
		/// Names of the OptionSetValue.
		/// </summary>
		public System.Collections.Generic.Dictionary<int, string> Names
		{
			get
			{
				return _names ?? (_names = CreateNames());
			} 
			set
			{
				_names = value;
				if (value == null)
				{
				    _nameObjects = new object[0];
				}
				else
				{
				    _nameObjects = null;
				}
			}
		}
		
		/// <summary>
		/// Initializes a new instance of the <see cref="OptionSetMetadataAttribute"/> class.
		/// </summary>
		/// <param name="name">Name of the value.</param>
		/// <param name="displayIndex">Display order index of the value.</param>
		/// <param name="color">Color of the value.</param>
		/// <param name="description">Description of the value.</param>
		/// <param name="externalValue">External value of the value.</param>
		/// <param name="names">Names of the value.</param>
		public OptionSetMetadataAttribute(string name, int displayIndex, string color = null, string description = null, string externalValue = null, params object[] names)
		{
			this.Color = color;
			this.Description = description;
			this._nameObjects = names;
			this.ExternalValue = externalValue;
			this.DisplayIndex = displayIndex;
			this.Name = name;
		}
		
		private System.Collections.Generic.Dictionary<int, string> CreateNames()
		{
			System.Collections.Generic.Dictionary<int, string> names = new System.Collections.Generic.Dictionary<int, string>();
			for (int i = 0; (i < _nameObjects.Length); i = (i + 2))
			{
				names.Add(((int)(_nameObjects[i])), ((string)(_nameObjects[(i + 1)])));
			}
			return names;
		}
	}
	
	/// <summary>
	/// Extension class to handle retrieving of OptionSetMetadataAttribute.
	/// </summary>
	public static class OptionSetExtension
	{
		
		/// <summary>
		/// Returns the OptionSetMetadataAttribute for the given enum value
		/// </summary>
		/// <typeparam name="T">OptionSet Enum Type</typeparam>
		/// <param name="value">Enum Value with OptionSetMetadataAttribute</param>
		public static OptionSetMetadataAttribute GetMetadata<T>(this T value)
			where T :  struct, System.IConvertible
		{
			System.Type enumType = typeof(T);
			if (!enumType.IsEnum)
			{
				throw new System.ArgumentException("T must be an enum!");
			}
			System.Reflection.MemberInfo[] members = enumType.GetMember(value.ToString());
			for (int i = 0; (i < members.Length); i++
			)
			{
				System.Attribute attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(members[i], typeof(OptionSetMetadataAttribute));
				if (attribute != null)
				{
					return ((OptionSetMetadataAttribute)(attribute));
				}
			}
			throw new System.ArgumentException("T must be an enum adorned with an OptionSetMetadataAttribute!");
		}
	}
}
#pragma warning restore CS1591
